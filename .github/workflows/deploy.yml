name: Deploy infrastructure

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      CDK_DEFAULT_ACCOUNT: ${{ vars.AWS_ACCOUNT_ID }}
      CDK_DEFAULT_REGION: ${{ vars.AWS_REGION }}
      DOMAIN_NAME: ${{ vars.DOMAIN_NAME }}
      HOSTED_ZONE_ID: ${{ vars.HOSTED_ZONE_ID }}
      ENABLE_WEEKLY_LAMBDA: ${{ vars.ENABLE_WEEKLY_LAMBDA }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Build infrastructure
        working-directory: packages/infra
        run: npm run build

      - name: Deploy CDK stacks
        working-directory: packages/infra
        run: |
          rm -f cdk-outputs.json
          npx cdk deploy --all --require-approval never -c domain=$DOMAIN_NAME -c hostedZoneId=$HOSTED_ZONE_ID -c deployWeeklyReview=$ENABLE_WEEKLY_LAMBDA --outputs-file cdk-outputs.json

      - name: Build web
        working-directory: packages/web
        env:
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          DOMAIN=$(jq -r '.AppStack.Domain' ../infra/cdk-outputs.json)
          USER_POOL_ID=$(jq -r '.AppStack.UserPoolId' ../infra/cdk-outputs.json)
          USER_POOL_CLIENT_ID=$(jq -r '.AppStack.UserPoolClientId' ../infra/cdk-outputs.json)
          IDENTITY_POOL_ID=$(jq -r '.AppStack.IdentityPoolId' ../infra/cdk-outputs.json)
          ENTRY_BUCKET=$(jq -r '.AppStack.UserdataBucketName' ../infra/cdk-outputs.json)
          VITE_REGION=$AWS_REGION \
          VITE_DOMAIN=$DOMAIN \
          VITE_USER_POOL_ID=$USER_POOL_ID \
          VITE_USER_POOL_CLIENT_ID=$USER_POOL_CLIENT_ID \
          VITE_IDENTITY_POOL_ID=$IDENTITY_POOL_ID \
          VITE_HOSTED_UI_DOMAIN=$DOMAIN \
          VITE_ENTRY_BUCKET=$ENTRY_BUCKET \
          npm run build

      - name: Sync web assets
        run: |
          WEB_BUCKET=$(jq -r '.AppStack.WebBucketName' packages/infra/cdk-outputs.json)
          aws s3 sync packages/web/dist s3://$WEB_BUCKET --delete

      - name: Invalidate CloudFront
        run: |
          DIST_ID=$(jq -r '.AppStack.CloudFrontDistributionId' packages/infra/cdk-outputs.json)
          aws cloudfront create-invalidation --distribution-id $DIST_ID --paths '/*'
